"""
The `DateTime` scalar represents a date and time following the ISO 8601 standard
"""
scalar DateTime

enum ENUM_REQUEST_CATEGORY {
  Document
  Equipment
  Credit
  Payment
}

enum ENUM_REQUEST_STATUS {
  Open
  In
  Progress
  Pending
  Denied
  Approved
  Provided
  Received
  Close
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

union Morph = Request | UploadFile | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser

type Query {
  request(id: ID!): Request
  requests(sort: String, limit: Int, start: Int, where: JSON): [Request]
  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]
  role(id: ID!): UsersPermissionsRole

  """
  Retrieve all the existing roles. You can't apply filters on this query.
  """
  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]
  user(id: ID!): UsersPermissionsUser
  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]
}

type Request {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  requestor: UsersPermissionsUser
  needed_by: DateTime
  category: ENUM_REQUEST_CATEGORY!
  notes: String
  tags: JSON
  fields: JSON
  status: ENUM_REQUEST_STATUS
  available_at: DateTime
}

type UploadFile {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  hash: String!
  ext: String
  mime: String!
  size: String!
  url: String!
  provider: String!
  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]
}

type UsersPermissionsPermission {
  _id: ID!
  type: String!
  controller: String!
  action: String!
  enabled: Boolean!
  policy: String
  role: UsersPermissionsRole
}

type UsersPermissionsRole {
  _id: ID!
  name: String!
  description: String
  type: String
  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]
  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]
}

type UsersPermissionsUser {
  _id: ID!
  username: String!
  email: String!
  provider: String
  role: UsersPermissionsRole
  first_name: String
  last_name: String
  company_role: String
  picture: UploadFile
  hired_date: DateTime
  is_active: Boolean
  contact_numbers: JSON
  requests(sort: String, limit: Int, start: Int, where: JSON): [Request]
}
